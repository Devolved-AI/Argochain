[package]
name = "Argochain-node"
version = "0.1.0"
license = "Unlicense"
authors.workspace = true
homepage.workspace = true
repository.workspace = true
edition.workspace = true
publish = false

build = "build.rs"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
async-trait = { workspace = true }
clap = { workspace = true }
futures = { workspace = true }
hex-literal = { workspace = true }
jsonrpsee = { workspace = true, features = ["server", "macros"] }
log = { workspace = true }
codec = { package = "parity-scale-codec", workspace = true }
serde_json = { workspace = true, features = ["arbitrary_precision"] }

# Substrate
prometheus-endpoint = { package = "substrate-prometheus-endpoint", workspace = true }
sc-basic-authorship = { workspace = true }
sc-chain-spec = { workspace = true }
sc-cli = { workspace = true }
sc-client-api = { workspace = true }
sc-consensus = { workspace = true }
sc-consensus-aura = { workspace = true }
sc-consensus-grandpa = { workspace = true }
sc-consensus-manual-seal = { workspace = true }
sc-executor = { workspace = true }
sc-network = { workspace = true }
sc-network-sync = { workspace = true }
sc-offchain = { workspace = true }
sc-rpc = { workspace = true }
sc-service = { workspace = true }
sc-telemetry = { workspace = true }
sc-transaction-pool = { workspace = true }
sc-transaction-pool-api = { workspace = true }
sp-api = { workspace = true, features = ["default"] }
sp-block-builder = { workspace = true }
sp-blockchain = { workspace = true }
sp-consensus-aura = { workspace = true, features = ["default"] }
sp-consensus-grandpa = { workspace = true, features = ["default"] }
sp-core = { workspace = true, features = ["default"] }
sp-inherents = { workspace = true, features = ["default"] }
sp-io = { workspace = true, features = ["default"] }
sp-offchain = { workspace = true, features = ["default"] }
sp-runtime = { workspace = true, features = ["default"] }
sp-session = { workspace = true, features = ["default"] }
sp-timestamp = { workspace = true, features = ["default"] }
sp-transaction-pool = { workspace = true, features = ["default"] }
# These dependencies are used for RPC
frame-system-rpc-runtime-api = { workspace = true }
pallet-transaction-payment-rpc = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
substrate-frame-rpc-system = { workspace = true }
# These dependencies are used for runtime benchmarking
frame-benchmarking = { workspace = true, optional = true }
frame-benchmarking-cli = { workspace = true,default-features = false }
frame-system = { workspace = true }
pallet-transaction-payment = { workspace = true }
node-primitives={workspace = true}
array-bytes = {workspace = true}
rand = "0.8"
futures-timer = "3.0"
hex = {workspace = true,default-features = false }
serde = { version = "1.0.163", features = ["derive"] }
sp-keystore = {workspace = true }
sc-consensus-babe = { workspace = true }
sc-consensus-slots = { workspace = true }
sp-consensus = { workspace = true }
sc-consensus-epochs = { workspace = true }
sp-genesis-builder = {default-features = false,workspace = true}
sp-consensus-babe = { workspace = true  }
sp-std = { workspace = true }


# Frontier
fc-api = { workspace = true }
fc-cli = { workspace = true }
fc-consensus = { workspace = true }
fc-db = { workspace = true }
fc-mapping-sync = { workspace = true }
fc-rpc = { workspace = true }
fc-rpc-core = { workspace = true }
fc-storage = { workspace = true }
fp-account = { workspace = true }
fp-dynamic-fee = { workspace = true, features = ["default"] }
fp-evm = { workspace = true, features = ["default"] }
fp-rpc = { workspace = true, features = ["default"] }
argochain-runtime = { workspace = true, features = ["std"] }
fp-consensus = { workspace = true, features = ["default"] }
fp-storage = { workspace = true, features = ["default"] }
pallet-evm = {  workspace = true, features = ["default"]}

#----------------------------------------------------------------------------------------------------------------------------------------

sc-keystore = { workspace = true }
sc-network-common = { workspace = true }

sp-keyring = { workspace = true }
sp-transaction-storage-proof = { workspace = true }
sp-authority-discovery = { workspace = true }
sc-sync-state-rpc = { workspace = true }
sc-sysinfo = { workspace = true }
sc-statement-store = { workspace = true }

sc-storage-monitor = {workspace = true  }
sc-network-statement = { workspace = true }
sp-statement-store = { workspace = true}
sc-rpc-spec-v2 = { workspace = true }
jsonrpc-core = {workspace = true}

sc-rpc-api = {workspace = true }
docify = { workspace = true }
sc-service-test = { workspace = true}
sc-block-builder = { workspace = true }
sp-tracing = { workspace = true }
sc-consensus-babe-rpc = { workspace = true }
sc-consensus-grandpa-rpc = { workspace = true }
substrate-state-trie-migration-rpc = { workspace = true  }
sc-authority-discovery = {workspace = true  }
pallet-assets = { workspace = true}
pallet-asset-tx-payment = { workspace = true }
pallet-asset-conversion-tx-payment = { workspace = true }
mmr-rpc = { workspace = true }
frame-metadata-hash-extension = { workspace = true }



# These dependencies are used for runtime benchmarking


# frame dependencies
pallet-im-online = {workspace = true }



# Frontier





#----------------------------------------------------------------------------------------------------------------------------------------

[build-dependencies]
substrate-build-script-utils = { workspace = true }

[dev-dependencies]
substrate-cli-test-utils = { workspace = true}



[features]
default = [
	"rocksdb",
	"sql",
	"txpool",
	"rpc-binary-search-estimate",
]
rocksdb = [
	"sc-cli/rocksdb",
	"sc-service/rocksdb",
	"fc-cli/rocksdb",
	"fc-db/rocksdb",
	"fc-mapping-sync/rocksdb",
	"fc-rpc/rocksdb",
	"argochain-runtime/with-rocksdb-weights",
]
paritydb = [
	"argochain-runtime/with-paritydb-weights",
]
sql = [
	"fc-db/sql",
	"fc-mapping-sync/sql",
]
txpool = ["fc-rpc/txpool"]
rpc-binary-search-estimate = ["fc-rpc/rpc-binary-search-estimate"]
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-benchmarking-cli/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
	"argochain-runtime/runtime-benchmarks",
]