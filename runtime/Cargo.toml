[package]
name = "argochain-runtime"
version = "2.0.0"
authors = ["Argo Chain Team"]
description = "Argo chain runtime."
edition = "2021"
build = "build.rs"
license = "Apache-2.0"
homepage = "https://substrate.io"
repository = "https://github.com/paritytech/substrate/"
publish = false

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]

array-bytes = "6.1"
hex-literal = "0.4.1"

# third-party dependencies
codec = { package = "parity-scale-codec", version = "3.6.12", default-features = false, features = [
	"derive",
	"max-encoded-len",
] }
scale-info = {workspace = true}

static_assertions = "1.1.0"
log ={workspace = true}

primitive-types = { version = "0.12.0", default-features = false, features = ["codec", "scale-info", "num-traits"] }

# primitives
sp-authority-discovery = {  default-features = false, workspace=true}
sp-consensus-babe = {  default-features = false,git = "https://github.com/paritytech/polkadot-sdk.git", branch = "stable2409" }
sp-consensus-grandpa = {  default-features = false, workspace=true }
sp-block-builder = { git = "https://github.com/paritytech/polkadot-sdk.git", branch = "stable2409", default-features = false }
sp-inherents = {  default-features = false, workspace=true}
node-primitives = {  default-features = false, workspace=true }
sp-offchain = {  default-features = false, workspace=true }
sp-core = {  default-features = false, workspace=true }
sp-std = {  default-features = false, workspace=true }
sp-api = {  default-features = false, workspace=true }
sp-runtime = { default-features = false, workspace=true }
sp-staking = {  default-features = false, workspace=true }
sp-session = {  default-features = false, workspace=true}
sp-transaction-pool = {  default-features = false, workspace=true}
sp-statement-store = { default-features = false, workspace=true}
sp-version = {  default-features = false, workspace=true }
sp-io = {  default-features = false, workspace=true }
sp-consensus-beefy = {default-features = false, workspace=true }
sp-genesis-builder = {default-features = false, workspace=true }
sp-consensus-aura={default-features = false, workspace=true}





# frame dependencies
frame-executive = {  default-features = false, workspace=true }
frame-benchmarking = {  default-features = false, workspace=true }
frame-support={workspace=true}
frame-system = {  default-features = false, workspace=true }
frame-system-benchmarking = {  default-features = false, workspace=true, optional = true }
frame-election-provider-support = {  default-features = false, workspace=true }
frame-system-rpc-runtime-api = {  default-features = false, workspace=true }
frame-try-runtime = {  default-features = false, workspace=true, optional = true }
pallet-alliance = {  default-features = false, workspace=true }
pallet-asset-conversion = {  default-features = false, workspace=true }
pallet-asset-rate = { default-features = false, workspace=true }
pallet-assets = { default-features = false, workspace=true }
pallet-authority-discovery = {  default-features = false, workspace=true }
pallet-authorship = {  default-features = false, workspace=true }
pallet-babe = {  default-features = false, workspace=true }
pallet-bags-list = {  default-features = false, workspace=true }
pallet-balances = {  default-features = false, workspace=true }
pallet-bounties = {  default-features = false, workspace=true }
pallet-child-bounties = {  default-features = false, workspace=true }
pallet-collective = {  default-features = false, workspace=true }
pallet-contracts = {  default-features = false, workspace=true}
pallet-conviction-voting = {  default-features = false, workspace=true }
pallet-core-fellowship = {  default-features = false, workspace=true }
pallet-democracy = {  default-features = false, workspace=true }
pallet-election-provider-multi-phase = {  default-features = false, workspace=true }
pallet-election-provider-support-benchmarking = {  default-features = false, workspace=true, optional = true }
pallet-elections-phragmen = { default-features = false, workspace=true }
pallet-fast-unstake = {  default-features = false, workspace=true }
pallet-nis = {  default-features = false, workspace=true }
pallet-grandpa = {  default-features = false, workspace=true }
pallet-im-online = {  default-features = false, workspace=true }
pallet-indices = {  default-features = false, workspace=true }
pallet-identity = {  default-features = false, workspace=true }
pallet-lottery = {  default-features = false, workspace=true }
pallet-membership = {  default-features = false, workspace=true }
pallet-message-queue = {  default-features = false, workspace=true }
pallet-mmr = {  default-features = false, workspace=true }
pallet-multisig = {  default-features = false, workspace=true }
pallet-nfts = {  default-features = false, workspace=true }
pallet-nfts-runtime-api = {  default-features = false, workspace=true}
pallet-nft-fractionalization = {  default-features = false, workspace=true }
pallet-nomination-pools = {  default-features = false, workspace=true}

pallet-nomination-pools-benchmarking = {  default-features = false, optional = true, workspace=true }
pallet-nomination-pools-runtime-api = { default-features = false, workspace=true }
pallet-offences = {  default-features = false, workspace=true }
pallet-offences-benchmarking = {  workspace=true, default-features = false, optional = true }
pallet-glutton = {  default-features = false, workspace=true }
pallet-preimage = {  default-features = false, workspace=true }
pallet-proxy = {  default-features = false, workspace=true }
pallet-insecure-randomness-collective-flip = { default-features = false, workspace=true }
pallet-ranked-collective = {  default-features = false, workspace=true }
pallet-recovery = {  default-features = false, workspace=true }
pallet-referenda = {  default-features = false, workspace=true }
pallet-remark = {  default-features = false, workspace=true}
pallet-root-testing = { default-features = false, workspace=true }
pallet-salary = { default-features = false, workspace=true }
pallet-session = {  features = [ "historical" ], workspace=true, default-features = false }
pallet-session-benchmarking = {  workspace=true, default-features = false, optional = true }
pallet-staking = {  default-features = false, workspace=true}
pallet-staking-reward-curve = { default-features = false, workspace=true }
pallet-staking-runtime-api = {  default-features = false, workspace=true }
pallet-state-trie-migration = {  default-features = false, workspace=true }
pallet-statement = {  default-features = false, workspace=true }
pallet-scheduler = {  default-features = false, workspace=true}
pallet-society = {  default-features = false, workspace=true }
pallet-sudo = {  default-features = false, workspace=true}
pallet-timestamp = {  default-features = false, workspace=true }
pallet-tips = {  default-features = false, workspace=true }
pallet-treasury = {  default-features = false, workspace=true }
pallet-utility = {  default-features = false, workspace=true }
pallet-transaction-payment = {  default-features = false, workspace=true }
pallet-transaction-payment-rpc-runtime-api = {  default-features = false, workspace=true}
pallet-asset-conversion-tx-payment = { default-features = false, workspace=true }
pallet-asset-tx-payment = {  default-features = false, workspace=true}
pallet-transaction-storage = {  default-features = false, workspace=true }
pallet-uniques = {  default-features = false, workspace=true }
pallet-vesting = {  default-features = false, workspace=true }
pallet-whitelist = {  default-features = false, workspace=true }
pallet-broker = {  default-features = false, workspace=true }
pallet-tx-pause = {  default-features = false, workspace=true }


# Frontier
fp-account = { workspace = true, features = ["serde"] }
fp-evm = { workspace = true, features = ["serde"] }
fp-rpc = { workspace = true }
fp-self-contained = { workspace = true, features = ["serde"] }

# Frontier FRAME
pallet-base-fee = { workspace = true }
pallet-dynamic-fee = { workspace = true }
pallet-ethereum = { workspace = true }
pallet-evm = { workspace = true }
pallet-evm-chain-id = { workspace = true }
pallet-evm-precompile-modexp = { workspace = true }
pallet-evm-precompile-sha3fips = { workspace = true }
pallet-evm-precompile-simple = { workspace = true }
pallet-hotfix-sufficients = { workspace = true }

[build-dependencies]
substrate-wasm-builder = { version = "24.0.0",git = "https://github.com/paritytech/polkadot-sdk.git", branch = "stable2409", optional = true }
[dependencies.pallet-counter]
path = "../pallets/pallet-counter"
default-features = false
[features]
default = ["std"]
with-tracing = ["frame-executive/with-tracing"]
std = [
	"pallet-whitelist/std",
	"pallet-offences-benchmarking?/std",
	"pallet-election-provider-support-benchmarking?/std",
	"pallet-asset-conversion-tx-payment/std",
	"frame-system-benchmarking?/std",
	"frame-election-provider-support/std",
	"sp-authority-discovery/std",
	"pallet-asset-conversion/std",
	"pallet-assets/std",
	"pallet-authority-discovery/std",
	"pallet-authorship/std",
	"sp-consensus-babe/std",
	"sp-consensus-beefy/std",
	"sp-consensus-grandpa/std",
	"pallet-babe/std",
	"pallet-bags-list/std",
	"pallet-balances/std",
	"pallet-bounties/std",
	"sp-block-builder/std",
	"codec/std",
	"scale-info/std",
	"pallet-collective/std",
	"pallet-contracts/std",
	# "pallet-contracts-primitives/std",
	"pallet-conviction-voting/std",
	"pallet-core-fellowship/std",
	"pallet-democracy/std",
	"pallet-elections-phragmen/std",
	"pallet-fast-unstake/std",
	"frame-executive/std",
	"pallet-nis/std",
	"pallet-grandpa/std",
	"pallet-im-online/std",
	"pallet-indices/std",
	"sp-inherents/std",
	"pallet-lottery/std",
	"pallet-membership/std",
	"pallet-message-queue/std",
	"pallet-mmr/std",
	"pallet-multisig/std",
	"pallet-nomination-pools/std",
	"pallet-nomination-pools-runtime-api/std",
	"pallet-nomination-pools-benchmarking?/std",
	"pallet-identity/std",
	"pallet-scheduler/std",
	"pallet-tx-pause/std",
	"node-primitives/std",
	"sp-offchain/std",
	"pallet-offences/std",
	"pallet-glutton/std",
	"pallet-preimage/std",
	"pallet-proxy/std",
	"pallet-broker/std",
	"sp-core/std",
	"pallet-insecure-randomness-collective-flip/std",
	"sp-std/std",
	"pallet-session/std",
	"pallet-session-benchmarking?/std",
	"sp-api/std",
	"sp-runtime/std",
	"sp-staking/std",
	"pallet-staking/std",
	"pallet-staking-runtime-api/std",
	"pallet-state-trie-migration/std",
	"pallet-statement/std",
	"pallet-salary/std",
	"sp-session/std",
	"pallet-sudo/std",
	"frame-support/std",
	"frame-benchmarking/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"pallet-election-provider-multi-phase/std",
	"pallet-timestamp/std",
	"pallet-tips/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"pallet-transaction-storage/std",
	"pallet-treasury/std",
	"pallet-asset-rate/std",
	"sp-transaction-pool/std",
	"sp-statement-store/std",
	"pallet-utility/std",
	"sp-version/std",
	"pallet-society/std",
	"pallet-ranked-collective/std",
	"pallet-referenda/std",
	"pallet-remark/std",
	"pallet-root-testing/std",
	"pallet-recovery/std",
	"pallet-uniques/std",
	"pallet-nfts/std",
	"pallet-nfts-runtime-api/std",
	"pallet-nft-fractionalization/std",
	"pallet-vesting/std",
	"log/std",
	"frame-try-runtime?/std",
	"sp-io/std",
	"pallet-child-bounties/std",
	"pallet-alliance/std",
	"substrate-wasm-builder",
	#frontier
	'fp-rpc/std',
	'fp-evm/std',
	'fp-account/std',
	'fp-self-contained/std',
	'pallet-base-fee/std',
	'pallet-dynamic-fee/std',
	'pallet-ethereum/std',
	'pallet-evm/std',
	'pallet-evm-precompile-simple/std',
	'pallet-evm-precompile-sha3fips/std',
	"pallet-evm-precompile-simple/std",
	"pallet-counter/std",

]
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"pallet-ethereum/runtime-benchmarks",
	"pallet-evm/runtime-benchmarks",
	"pallet-alliance/runtime-benchmarks",
	"pallet-asset-conversion/runtime-benchmarks",
	"pallet-assets/runtime-benchmarks",
	"pallet-babe/runtime-benchmarks",
	"pallet-bags-list/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-bounties/runtime-benchmarks",
	"pallet-child-bounties/runtime-benchmarks",
	"pallet-collective/runtime-benchmarks",
	"pallet-contracts/runtime-benchmarks",
	"pallet-conviction-voting/runtime-benchmarks",
	"pallet-core-fellowship/runtime-benchmarks",
	"pallet-democracy/runtime-benchmarks",
	"pallet-election-provider-multi-phase/runtime-benchmarks",
	"pallet-election-provider-support-benchmarking/runtime-benchmarks",
	"pallet-elections-phragmen/runtime-benchmarks",
	"pallet-fast-unstake/runtime-benchmarks",
	"pallet-nis/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-identity/runtime-benchmarks",
	"pallet-im-online/runtime-benchmarks",
	"pallet-indices/runtime-benchmarks",
	"pallet-lottery/runtime-benchmarks",
	"pallet-membership/runtime-benchmarks",
	"pallet-message-queue/runtime-benchmarks",
	"pallet-mmr/runtime-benchmarks",
	"pallet-multisig/runtime-benchmarks",
	"pallet-nomination-pools-benchmarking/runtime-benchmarks",
	"pallet-offences-benchmarking/runtime-benchmarks",
	"pallet-glutton/runtime-benchmarks",
	"pallet-preimage/runtime-benchmarks",
	"pallet-proxy/runtime-benchmarks",
	"pallet-scheduler/runtime-benchmarks",
	"pallet-ranked-collective/runtime-benchmarks",
	"pallet-referenda/runtime-benchmarks",
	"pallet-recovery/runtime-benchmarks",
	"pallet-remark/runtime-benchmarks",
	"pallet-salary/runtime-benchmarks",
	"pallet-session-benchmarking/runtime-benchmarks",
	"pallet-society/runtime-benchmarks",
	"pallet-staking/runtime-benchmarks",
	"pallet-state-trie-migration/runtime-benchmarks",
	"pallet-sudo/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-tips/runtime-benchmarks",
	"pallet-transaction-storage/runtime-benchmarks",
	"pallet-treasury/runtime-benchmarks",
	"pallet-asset-rate/runtime-benchmarks",
	"pallet-utility/runtime-benchmarks",
	"pallet-uniques/runtime-benchmarks",
	"pallet-nfts/runtime-benchmarks",
	"pallet-nft-fractionalization/runtime-benchmarks",
	"pallet-vesting/runtime-benchmarks",
	"pallet-whitelist/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
]
try-runtime = [
	"frame-try-runtime/try-runtime",
	"frame-executive/try-runtime",
	"frame-system/try-runtime",
	"frame-support/try-runtime",
	"pallet-alliance/try-runtime",
	"pallet-asset-conversion/try-runtime",
	"pallet-assets/try-runtime",
	"pallet-authority-discovery/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-babe/try-runtime",
	"pallet-bags-list/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-bounties/try-runtime",
	"pallet-child-bounties/try-runtime",
	"pallet-collective/try-runtime",
	"pallet-contracts/try-runtime",
	"pallet-conviction-voting/try-runtime",
	"pallet-core-fellowship/try-runtime",
	"pallet-democracy/try-runtime",
	"pallet-election-provider-multi-phase/try-runtime",
	"pallet-elections-phragmen/try-runtime",
	"pallet-fast-unstake/try-runtime",
	"pallet-nis/try-runtime",
	"pallet-grandpa/try-runtime",
	"pallet-im-online/try-runtime",
	"pallet-indices/try-runtime",
	"pallet-identity/try-runtime",
	"pallet-lottery/try-runtime",
	"pallet-membership/try-runtime",
	"pallet-message-queue/try-runtime",
	"pallet-mmr/try-runtime",
	"pallet-multisig/try-runtime",
	"pallet-nomination-pools/try-runtime",
	"pallet-offences/try-runtime",
	"pallet-glutton/try-runtime",
	"pallet-preimage/try-runtime",
	"pallet-proxy/try-runtime",
	"pallet-broker/try-runtime",
	"pallet-insecure-randomness-collective-flip/try-runtime",
	"pallet-ranked-collective/try-runtime",
	"pallet-recovery/try-runtime",
	"pallet-referenda/try-runtime",
	"pallet-remark/try-runtime",
	"pallet-root-testing/try-runtime",
	"pallet-salary/try-runtime",
	"pallet-session/try-runtime",
	"pallet-staking/try-runtime",
	"pallet-state-trie-migration/try-runtime",
	"pallet-statement/try-runtime",
	"pallet-scheduler/try-runtime",
	"pallet-society/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-tips/try-runtime",
	"pallet-treasury/try-runtime",
	"pallet-asset-rate/try-runtime",
	"pallet-utility/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-asset-conversion-tx-payment/try-runtime",
	"pallet-transaction-storage/try-runtime",
	"pallet-uniques/try-runtime",
	"pallet-nfts/try-runtime",
	"pallet-nft-fractionalization/try-runtime",
	"pallet-vesting/try-runtime",
	"pallet-whitelist/try-runtime",
]
